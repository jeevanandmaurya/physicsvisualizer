# PhysicsVisualizer - Feature-Based Architecture (Updated 2025)

## 📁 Current Project Structure

```
physicsvisualizer/
├── 📄 package.json & vite.config.js    # Build configuration
├── 📄 README.md                        # Project documentation
├── 🏗️ PhysicsVisualizerArchitecture.md # System architecture docs
├── 📄 file-structure.txt               # This file
├── 📁 public/                          # Static assets
│   ├── index.html
│   └── vite.svg
├── 📁 src/                             # Source code (Feature-based)
│   ├── 🏠 App.jsx & main.jsx           # React app entry points
│   ├── 🎨 App.css & index.css          # Global styles
│   ├── 📊 scene.js & scenes.js         # Scene data & examples
│   ├── 🗂️ assets/                      # Static assets (images, fonts)
│   │   ├── physicsvisualizer.svg/png
│   │   ├── UbuntuMono fonts
│   │   └── thumbnails/ (scene previews)
│   ├── 🔧 core/                        # Business logic & engines
│   │   ├── 🤖 ai/                      # AI processing (Gemini)
│   │   │   ├── gemini.js
│   │   │   └── prompts/ (agentPrompt.txt, extractPrompt.txt)
│   │   ├── ⚛️ physics/                 # Physics engines
│   │   │   ├── engine.jsx              # Cannon.js integration
│   │   │   ├── gravitation/calculations.js
│   │   │   ├── electrostatic/calculations.js
│   │   │   ├── fluid/calculations.js
│   │   │   ├── constraints/calculations.js
│   │   │   └── connections/calculations.js
│   │   ├── 🎬 scene/                   # Scene management
│   │   │   ├── history.js
│   │   │   └── patcher.js
│   │   └── 🗂️ workspace/               # Workspace management
│   │       └── WorkspaceManager.js
│   ├── 🎯 features/                    # Feature-based components
│   │   ├── 🎲 visualizer/              # 3D visualization feature
│   │   │   └── components/
│   │   │       ├── Visualizer.jsx/css
│   │   │       ├── OverlayGraph.jsx
│   │   │       ├── GraphOverlay.jsx
│   │   │       └── SceneConsole.jsx/css
│   │   ├── 💬 chat/                    # AI chat feature
│   │   │   ├── components/
│   │   │   │   ├── ChatOverlay.jsx/css
│   │   │   │   ├── Conversation.jsx/css
│   │   │   │   └── IntegratedPanel.jsx/css
│   │   │   └── hooks/ (future use)
│   │   └── 📚 collection/              # Scene management feature
│   │       ├── components/
│   │       │   ├── SceneSelector.jsx/css (hook export only)
│   │       │   ├── SceneDetails.jsx/css (hook export only)
│   │       │   └── ChangePreview.jsx/css
│   │       └── hooks/
│   │           ├── useSceneSelector.js
│   │           └── useSceneDetails.js
│   ├── 🎨 shared/ui/                   # Reusable UI components
│   │   └── components/
│   │       ├── leftPanel.jsx/css      # Layout panels
│   │       ├── rightPanel.jsx/css     # Layout panels
│   │       ├── messagecontent.jsx     # Message display
│   │       └── Graph.css              # Chart styling
│   ├── 🖥️ views/                       # Page-level view components
│   │   ├── DashboardView.jsx
│   │   ├── VisualizerView.jsx
│   │   ├── CollectionView.jsx (CSS integrated)
│   │   ├── ChatView.jsx
│   │   ├── SettingsView.jsx
│   │   ├── HistoryView.jsx
│   │   └── AnalyticsView.jsx
│   ├── 🪟 workbench/                   # Main application layout
│   │   ├── Workbench.jsx/css          # Main layout container
│   │   ├── Panel.jsx                  # Side panel component
│   │   ├── ActivityBar.jsx            # Left activity bar
│   │   └── StatusBar.jsx              # Bottom status bar
│   ├── ⚙️ contexts/                    # React contexts
│   │   ├── DatabaseContext.jsx
│   │   ├── WorkspaceContext.jsx
│   │   └── ThemeContext.jsx
│   └── 🛠️ utils/                       # Utility functions
│       └── testScenePatcher.js
└── 📁 backup/                          # Original components backup
    └── components/ (all original files)
```

## 🌐 Application Flow

```
📱 DOM Root (index.html)
└── 🎯 React Root (main.jsx)
    └── 🔄 StrictMode
        └── 💾 DatabaseProvider (Context)
            └── 🏠 App.jsx (Main App Component)
                └── 🪟 Workbench (Main Layout)
                    ├── 📊 ActivityBar (Left Sidebar)
                    │   ├── 🏠 Dashboard
                    │   ├── 🎲 Visualizer
                    │   ├── 💬 Chat
                    │   ├── 📚 Collection
                    │   └── ⚙️ Settings
                    │
                    └── 📋 Content Area
                        ├── 📊 DashboardView (Default)
                        ├── 🎲 VisualizerView ← MAIN PAGE
                        │   └── 📐 SidePanel (Scene Management)
                        │       ├── 📁 Left Panel (Scene Selector)
                        │       │   └── 🎯 useSceneSelector Hook
                        │       │       ├── 🔍 Extract Scene Button
                        │       │       ├── 📑 Tab Navigation
                        │       │       │   ├── 📖 Examples Tab
                        │       │       │   ├── 💬 Chat History Tab
                        │       │       │   └── 👤 My Scenes Tab
                        │       │       ├── 📋 Scene List
                        │       │       │   └── 🎯 Scene Items
                        │       │       │       ├── 📝 Scene Name
                        │       │       │       ├── 👤 Author Info
                        │       │       │       ├── ⚠️ Unsaved Badge
                        │       │       │       └── ⋯ Three-Dot Menu
                        │       │       └── 📝 Scene Description
                        │       │
                        │       └── 🔧 Center Panel (3D Visualizer)
                        │           └── 🎯 Visualizer Component
                        │               ├── 🎮 Three.js Canvas
                        │               ├── 🎲 Physics Objects
                        │               ├── 📊 Real-time Graphs
                        │               └── 🎨 Scene Rendering
                        │
                        └── 💬 Right Panel (Scene Details - Optional)
                            └── 🎯 useSceneDetails Hook
                                ├── 📑 Tab Navigation
                                │   ├── 📋 List View
                                │   └── 💻 JSON View
                                ├── 📊 Scene Properties
                                │   ├── ⚛️ Gravity & Physics
                                │   ├── 📏 Dimensions
                                │   └── 👤 Author Info
                                └── 🎯 Objects List
                                    ├── 📝 Object Details
                                    ├── 🔧 Properties
                                    └── 📋 Expandable Items
                        │
                        ├── 💬 ChatView (AI Chat Interface)
                        │   └── 🎯 Conversation Components
                        │       ├── 🤖 AI Messages
                        │       └── 👤 User Messages
                        │
                        ├── 📚 CollectionView (Scene Library)
                        └── ⚙️ SettingsView (App Settings)
```

## 🎯 Architecture Benefits

### ✅ **Feature Isolation**
- Each feature (`visualizer`, `chat`, `collection`) is self-contained
- Independent development and testing
- Clear separation of concerns

### ✅ **Scalable Structure**
- Easy to add new features without affecting others
- Modular design supports team collaboration
- Future-proof for expansion

### ✅ **Maintainable Code**
- Related files grouped together
- Clear import paths and dependencies
- Professional folder organization

### ✅ **Reusable Components**
- Shared UI components in `shared/ui/`
- Consistent design patterns
- Reduced code duplication

## 🚀 Development Workflow

1. **New Feature**: Create folder in `src/features/`
2. **Shared Component**: Add to `src/shared/ui/components/`
3. **Business Logic**: Place in appropriate `src/core/` subfolder
4. **View Component**: Add to `src/views/`
5. **Workbench Component**: Add to `src/workbench/`
6. **Hook**: Add to feature's `hooks/` folder
7. **Utility**: Add to `src/utils/`

## 📋 File Organization Legend

- 🎯 **Features**: Business domain components (with hooks)
- 🔧 **Core**: Business logic & engines
- 🎨 **Shared**: Reusable UI components
- 🖥️ **Views**: Page-level view components
- 🪟 **Workbench**: Main application layout
- ⚙️ **Contexts**: React state management
- 🛠️ **Utils**: Helper functions
- 📊 **Assets**: Static resources
- 🗂️ **Backup**: Original files (safe to delete after testing)

---

**Last Updated**: September 2025
**Architecture**: Feature-Based with Hooks & Views
**Status**: ✅ Production Ready
